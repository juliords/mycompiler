
Julio Ribeiro da Silva - 0911409

Primeiro Trabalho de Compiladores


- Do que se trata

Implementar um analisador lexico para a linguagem Monga apresentada no site da disciplina.


- Como foi feito

Para facilitar a implementação foi utilizado a ferramenta Lex. Toda a implementação se encontra em um único arquivo chamado "src.lex".
Os testes se encontram na pasta "./tests/" e podem ser executados manualmente apenas passando o nome do arquivo pelo argv do executável gerado. Caso não haja arquivo, espera-se que os dados sejam inseridos na entrada padrão.
Também foi feito um script que gera o executável final e roda todos os testes, fazendo no final um diff com um gabarito previamente verificado. Para executá-lo basta executá-lo: ./run


- O que foi feito

O código gerado pelo lex ficou responsável pela identificação dos tokens necessários, bastando apenas defini-los com expressões regulares e identificá-los de alguma maneira.
Para a identificação, foi criado um enum separado em 3 grandes blocos (por uma linha em branco): o primeiro define o nome dos tokens relacionados à variaveis; o segundo é relacionado ao controle de fluxo e identificadores; o terceiro se refere aos operadores.
Os tokens de operadores e palavras reservadas são triviais. Os demais exigem uso de expressão regular.


- Como a informação semantica é passada

Foi criado um union com os tipos básicos de dados que são necessários. As strings e caracteres tem os caracteres das extremidades removidos e os escapes processados antes de serem passados para o nível superior.
Os tokens criados começam com código acima do valor máximo que um char pode assumir. Isto ocorre pois, caso um char não seja reconhecido pelo analisador, seu código se torna o seu próprio token.


- O que não foi feito

Não foram implementadas regras para o caso de falha de outras regras, de forma a facilitar o debug do código.

