#!/bin/bash

# ----------------------------------------------

# random functions area

function check_error {
	if [ $? -ne 0 ]
	then
		echo $1
		exit 1
	fi
}

# ----------------------------------------------

# variable declaration area

CC=gcc
LEX=lex
YACC=yacc

LEX_FILE=src.lex
YACC_FILE=src.yacc

LEXFLAGS=""
YACCFLAGS="-d -v --debug"

CCFLAGS="-ansi -O2 -lfl -g"
CCFLAGSLEX="-DMAINLEX"
CCFLAGSYACC="-DMAINYACC"

EXEC_LEX=clex
EXEC_YACC=cyacc

TESTFD=./tests

# ----------------------------------------------

echo "----------------------------------------"
echo "PUC-Rio / Compiladores / Linguagem Monga" 
echo "Julio Ribeiro da Silva - 0911409" 
echo "----------------------------------------"
echo 

# ----------------------------------------------

# code generation using lex and yacc

echo -n "Generating code from Lex... "
$LEX $LEXFLAGS $LEX_FILE
check_error "ERROR!"
echo "OK!"

echo -n "Generating code from Yacc... "
$YACC $YACCFLAGS $YACC_FILE
check_error "ERROR!"
echo "OK!"
echo 

# ----------------------------------------------

# compiling sources for tests 

echo -n "Compiling lex... "
$CC lex.yy.c -o $EXEC_LEX $CCFLAGS $CCFLAGSLEX
check_error "ERROR!"
echo "OK!"

echo -n "Compiling yacc... "
$CC lex.yy.c y.tab.c tree.c -o $EXEC_YACC $CCFLAGS $CCFLAGSYACC
check_error "ERROR!"
echo "OK!"
echo

rm -f lex.yy.c y.tab.*
mv y.output yacc.log

# ----------------------------------------------

# testing lex

for FILE in $TESTFD/*.in
do
	F=`basename $FILE .in`
	./$EXEC_LEX <"$TESTFD/$F.in" >"$TESTFD/test.out"

	echo -n "Testing lex ($FILE)... "
	diff "$TESTFD/test.out" "$TESTFD/$F.gab" >diff.err
	check_error "ERROR!"
	echo "OK!"

	rm "$TESTFD/test.out"
done
echo

rm -f $EXEC_LEX diff.err

# ----------------------------------------------

# testing yacc

for FILE in $TESTFD/*.in
do
	echo -n "Testing yacc ($FILE)... "
	./$EXEC_YACC <$FILE 1>/dev/null 2>yacc.err
	check_error "ERROR!"
	echo "OK!"
done
echo

rm $EXEC_YACC yacc.err

# ----------------------------------------------
