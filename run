#!/bin/bash

# ----------------------------------------------

# random functions area

function check_error {
	if [ $? -ne 0 ]
	then
		echo $1
		exit 1
	fi
}

# ----------------------------------------------

# variable declaration area

LEX_FILE=src.lex
YACC_FILE=src.yacc

LEXFLAGS=""
YACCFLAGS="-d -v"

CCFLAGS="-ansi -O2 -lfl"
CCFLAGSLEX="-DMAINLEX"
CCFLAGSYACC="-DMAINYACC"

EXEC_LEX=clex
EXEC_YACC=cyacc

TESTLEXFD=./tests_lex

# ----------------------------------------------

# code generation using lex and yacc

echo -n "Generating code from Lex... "
lex $LEXFLAGS $LEX_FILE
check_error "failed!"
echo "OK!"

echo -n "Generating code from Yacc... "
yacc $YACCFLAGS $YACC_FILE
check_error "failed!"
echo "OK!"

# ----------------------------------------------

# compiling sources for tests 

echo -n "Compiling lex... "
gcc lex.yy.c -o $EXEC_LEX $CCFLAGS $CCFLAGSLEX
check_error "LEX compilation failed!"
echo "OK!"

echo -n "Compiling yacc... "
gcc lex.yy.c y.tab.c -o $EXEC_YACC $CCFLAGS $CCFLAGSYACC
check_error "YACC compilation failed!"
echo "OK!"

rm lex.yy.c y.tab.*
mv y.output yacc.log

# ----------------------------------------------

# testing lex

echo -n "Testing lex... "
for FILE in $TESTLEXFD/*.in
do
	F=`basename $FILE .in`
	./$EXEC_LEX <"$TESTLEXFD/$F.in" >"$TESTLEXFD/test.out"

	diff "$TESTLEXFD/test.out" "$TESTLEXFD/$F.gab"
	check_error "failed! ($FILE)"

	rm "$TESTLEXFD/test.out"
done
echo "OK!"

rm $EXEC_LEX

# ----------------------------------------------

rm $EXEC_YACC

# ----------------------------------------------
